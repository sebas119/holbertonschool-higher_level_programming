The ``1-my_list.pyr`` module
======================

Using ``MyList``
-------------------

Now use it:

    >>> MyList = __import__('1-my_list').MyList

    >>> own_list = MyList([1, 2, 3])
    >>> print(own_list)
    [1, 2, 3]

    >>> own_list = MyList()
    >>> type(own_list)
    <class '1-my_list.MyList'>

    >>> print(own_list)
    []

    >>> own_list = MyList([8, 5], [5, 9, 21])
    Traceback (most recent call last):
        ...
    TypeError: list() takes at most 1 argument (2 given)

    >>> own_list = MyList(None)
    Traceback (most recent call last):
        ...
    TypeError: 'NoneType' object is not iterable

    >>> own_list = MyList()
    >>> own_list.append(1)
    >>> own_list.append(2)
    >>> own_list.append(3)
    >>> print(own_list)
    [1, 2, 3]
    >>> own_list.print_sorted()
    [1, 2, 3]

    >>> own_list = MyList()
    >>> own_list.append(3)
    >>> own_list.append(2)
    >>> own_list.append(1)
    >>> print(own_list)
    [3, 2, 1]
    >>> own_list.print_sorted()
    [1, 2, 3]

    >>> own_list = MyList()
    >>> print(own_list)
    []

    >>> own_list.print_sorted()
    []

    >>> own_list = MyList([1, 2, 3])
    >>> new_list = own_list.print_sorted()
    [1, 2, 3]

    >>> isinstance(new_list, list)
    False

    >>> type(new_list) == list
    False

    >>> own_list is new_list
    False

    >>> own_list == new_list
    False

    >>> print(type(new_list))
    <class 'NoneType'>
    >>> print(type(own_list))
    <class '1-my_list.MyList'>

    >>> my_list = MyList([1, 4, 2, 3, 5])
    >>> new_list = my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> new_list is my_list.print_sorted()
    [1, 2, 3, 4, 5]
    True

    >>> own_list = MyList([])
    >>> print(own_list.print_sorted)
    <bound method MyList.print_sorted of []>

    >>> own_list = MyList()
    >>> own_list.append(-1)
    >>> own_list.append(-2)
    >>> own_list.append(-3)
    >>> print(own_list)
    [-1, -2, -3]
    >>> own_list.print_sorted()
    [-3, -2, -1]

    >>> own_list.print_sorted([])
    Traceback (most recent call last):
        ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given

    >>> own_list = MyList([1, 2, 3])
    >>> own_list.print_sorted() == own_list
    [1, 2, 3]
    False

    >>> own_list = MyList([1, 2, 3])
    >>> own_list.print_sorted() is own_list
    [1, 2, 3]
    False



