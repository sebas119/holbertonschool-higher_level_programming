The ``7-base_geometry.py`` module
======================

Using ``BaseGeometry``
-------------------

Now use it:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


    >>> base_geo = BaseGeometry()
    >>> type(base_geo)
    <class '7-base_geometry.BaseGeometry'>

    >>> base_geo.area()
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented

    >>> base_geo.integer_validator("string", "data")
    Traceback (most recent call last):
        ...
    TypeError: string must be an integer

    >>> base_geo.integer_validator("string", False)
    Traceback (most recent call last):
        ...
    TypeError: string must be an integer

    >>> base_geo.integer_validator("string", (25, 30))
    Traceback (most recent call last):
        ...
    TypeError: string must be an integer

    >>> base_geo.integer_validator("string", [4, 5])
    Traceback (most recent call last):
        ...
    TypeError: string must be an integer

    >>> base_geo.integer_validator("string", {28, 5, 4})
    Traceback (most recent call last):
        ...
    TypeError: string must be an integer

    >>> base_geo.integer_validator("string", None)
    Traceback (most recent call last):
        ...
    TypeError: string must be an integer

    >>> base_geo.integer_validator("string", -15)
    Traceback (most recent call last):
        ...
    ValueError: string must be greater than 0

    >>> base_geo.integer_validator("string", 0)
    Traceback (most recent call last):
        ...
    ValueError: string must be greater than 0

    >>> base_geo = BaseGeometry(None)
    Traceback (most recent call last):
        ...
    TypeError: object() takes no parameters
